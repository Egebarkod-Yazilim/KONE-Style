@model KONE.Entities.Dtos.CurrentCard.AddOrUpdateCurrentCard
@{
    Layout = "_Layout";
}

<div id="modalPlaceHolder" aria-hidden="true"></div>
@await Html.PartialAsync("_Breadcrumb", new KONE.KOne.WebUI.Models.BreadCrumb.BreadCrumbViewModel
{
    HeaderTitle = "Adresler",
    PageNames = new List<string>() { "Admin", "Anasayfa", "Cari Kartlar", "Adresler" },
    Url = "/Admin/Home/Index"
})
<div class="row">
    <div class="col-md-12">
        <div class="card custom-card">
            <div class="card-header justify-content-between">
                <div class="card-title">
                    <span class="bi bi-pin-map-fill"></span> Adresler
                </div>
                <div class="d-flex flex-wrap gap-2">
                    <a asp-controller="CurrentCard" asp-action="AddOrUpdateCurrentCardAddress" asp-route-currentcardid="@Model.Id" asp-route-addressid="0" class="btn btn-outline-success btn-wave waves-effect waves-light"><span class="bi bi-map-fill"></span> Adres Ekle</a>
                </div>
            </div>
            <div class="card-body">
                @await Component.InvokeAsync("CurrentCardAddressesViewComponent", new { currentCardId = Model.Id })
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="card custom-card">
            <div class="card-header justify-content-between">
                <div class="card-title">
                    <span class="bi bi-pin-map-fill"></span> Uydu Görüntüleri
                </div>
            </div>
            <div class="card-body">
                <div class="col-md-12 mb-3" style="height:480px;">
                    <label class="form-label">Uydu Görüntüsü</label>
                    <div id="map"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
}
@section Scripts {
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.gridlayer.googlemutant@latest/dist/Leaflet.GoogleMutant.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://unpkg.com/leaflet-easyprint"></script>

    <script>
        $(document).ready(function () {
            $('.select2').select2();

            $('#savebutton').on('click', function (e) {
                e.preventDefault();
                $('#currentcardaddressform').submit();
            });

            $('#fetchInformationsCurrentCardbutton').click(function (event) {
                event.preventDefault();
                var dataId = $(this).data('id');
                $.ajax({
                    url: '/CurrentCard/FetchCurrentCardWithAddress', // API endpoint
                    data: {
                        currentCardId: dataId
                    }
                    , method: 'GET'
                    , success: function (response) {
                        if (response.resultStatus === 1) {
                            toastr.warning('Cari kart ile eşlenemedi.', 'İşlem Başarısız!');

                        } else {
                            console.log(response.data);
                            $('#FirstName').val(response.data.name);
                            $('#LastName').val(response.data.surname);
                            $('#Email').val(response.data.email);
                            $('#PhoneNumber').val(response.data.gsm);
                            $('#CompanyName').val(response.data.commercialTitle);
                        }
                    }
                    , error: function (error) {
                        toastr.warning('Cari kart adres ile eşlenemedi.', 'İşlem Başarısız!');
                    }
                });

            });

            // Harita oluşturma

            var map = L.map('map').setView([39.9334, 32.8597], 10);

            mapLink =
                '<a href="http://www.esri.com/">Esri</a>';
            wholink =
                'i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community';
            googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
                maxZoom: 20
                , subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            }).addTo(map);

            var geojsonLayer;
            toastr.options = {
                "closeButton": true
                , "debug": false
                , "newestOnTop": false
                , "progressBar": true
                , "positionClass": "toast-top-right"
                , "preventDuplicates": false
                , "onclick": null
                , "showDuration": "300"
                , "hideDuration": "1000"
                , "timeOut": "5000"
                , "extendedTimeOut": "1000"
                , "showEasing": "swing"
                , "hideEasing": "linear"
                , "showMethod": "fadeIn"
                , "hideMethod": "fadeOut"
            };

            var attributionControl = document.querySelector('.leaflet-control-attribution.leaflet-control');
            if (attributionControl) {
                attributionControl.textContent = 'KONFRUT AG | KONE Parsel Sorgulama Ekranı.';
            }


            $('.addtomap').click(function (event) {
                var villageId = $(this).data('villageid');
                var parcelNo = $(this).data('parcel');
                var landNo = $(this).data('land');

                console.log(villageId);
                console.log(parcelNo);
                console.log(landNo);
                $.ajax({
                    url: '/Home/GetParcelCoordinates', // API endpoint
                    data: {
                        villageId: villageId
                        , land: landNo
                        , parcel: parcelNo
                    }
                    , method: 'GET'
                    , success: function (response) {
                        if (response.resultStatus === 1) {
                            toastr.warning('Parsel alanı bulunamadı.', 'İşlem Başarısız!');
                        } else {
                            // Draw polygons
                            var geojsonFeature = response.data;

                            geojsonLayer = L.geoJSON(geojsonFeature, {
                                style: function (feature) {
                                    console.log(feature);
                                    return {
                                        fillColor: '#6118ff', // Change fill color as needed
                                        weight: 1
                                        , opacity: 1
                                        , color: 'yellow'
                                        , fillOpacity: 0.7
                                    };
                                }
                                , onEachFeature: function (feature, layer) {
                                    var bounds = layer.getBounds(); // Katmanın sınırlarını al
                                    var center = bounds.getCenter(); // Katmanın merkezini hesapla

                                    // Metni oluştur
                                    var text = feature.properties.ozet;

                                    // Metni haritaya ekle
                                    L.marker(center, {
                                        icon: L.divIcon({
                                            className: 'text-label text-white'
                                            , html: '<div>' + text + '</div>'
                                            , iconSize: [100, 40]
                                        })
                                    }).addTo(map);
                                }
                            }).addTo(map);

                            // Zoom to fit the bounds of the drawn polygon
                            map.fitBounds(geojsonLayer.getBounds());
                            toastr.success('Ada/Parsel sorgusu başarıyla gerçekleştirilmiştir.', 'İşlem Başarılı!');
                        }
                    }
                    , error: function (error) {
                        toastr.warning('Parsel alanı bulunamadı.', 'İşlem Başarısız!');
                        console.error('Error fetching city data:', error);
                    }
                });
            });
        });
    </script>
}
